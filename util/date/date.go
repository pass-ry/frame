package date

import (
	"time"

	"github.com/pkg/errors"
)

var (
	holiday = make(map[int]map[time.Month]map[int]struct{})
)

func IsHoliday() bool {
	return IsHolidayByTime(time.Now())
}

func IsHolidayByTime(t time.Time) bool {
	year, ok := holiday[t.Year()]
	if !ok {
		return false
	}
	month, ok := year[t.Month()]
	if !ok {
		return false
	}
	_, ok = month[t.Day()]
	if !ok {
		return false
	}
	return true
}

func Holiday(gap time.Duration) time.Duration {
	return HolidayByTime(time.Now(), gap)
}

func HolidayByTime(t time.Time, gap time.Duration) time.Duration {
	if !IsHolidayByTime(t) {
		return gap
	}
	return gap * 2
}

func init() {
	constHoliday := []string{
		"2020-01-01",
		"2020-01-04",
		"2020-01-05",
		"2020-01-11",
		"2020-01-12",
		"2020-01-18",
		"2020-01-23",
		"2020-01-24",
		"2020-01-25",
		"2020-01-26",
		"2020-01-27",
		"2020-01-28",
		"2020-01-29",
		"2020-01-30",
		"2020-01-31",
		"2020-02-01",
		"2020-02-02",
		"2020-02-08",
		"2020-02-09",
		"2020-02-15",
		"2020-02-16",
		"2020-02-22",
		"2020-02-23",
		"2020-02-29",
		"2020-03-01",
		"2020-03-07",
		"2020-03-08",
		"2020-03-14",
		"2020-03-15",
		"2020-03-21",
		"2020-03-22",
		"2020-03-28",
		"2020-03-29",
		"2020-04-04",
		"2020-04-05",
		"2020-04-11",
		"2020-04-12",
		"2020-04-18",
		"2020-04-19",
		"2020-04-25",
		"2020-04-26",
		"2020-05-01",
		"2020-05-02",
		"2020-05-03",
		"2020-05-04",
		"2020-05-05",
		"2020-05-10",
		"2020-05-16",
		"2020-05-17",
		"2020-05-23",
		"2020-05-24",
		"2020-05-31",
		"2020-06-06",
		"2020-06-07",
		"2020-06-13",
		"2020-06-14",
		"2020-06-20",
		"2020-06-21",
		"2020-06-27",
		"2020-06-28",
		"2020-07-04",
		"2020-07-05",
		"2020-07-11",
		"2020-07-12",
		"2020-07-18",
		"2020-07-19",
		"2020-07-25",
		"2020-07-26",
		"2020-08-01",
		"2020-08-02",
		"2020-08-08",
		"2020-08-09",
		"2020-08-15",
		"2020-08-16",
		"2020-08-22",
		"2020-08-23",
		"2020-08-29",
		"2020-08-30",
		"2020-09-05",
		"2020-09-06",
		"2020-09-12",
		"2020-09-13",
		"2020-09-19",
		"2020-09-20",
		"2020-09-26",
		"2020-09-27",
		"2020-10-01",
		"2020-10-02",
		"2020-10-03",
		"2020-10-04",
		"2020-10-05",
		"2020-10-06",
		"2020-10-07",
		"2020-10-11",
		"2020-10-17",
		"2020-10-18",
		"2020-10-24",
		"2020-10-25",
		"2020-10-31",
		"2020-11-01",
		"2020-11-07",
		"2020-11-08",
		"2020-11-14",
		"2020-11-15",
		"2020-11-21",
		"2020-11-22",
		"2020-11-28",
		"2020-11-29",
		"2020-12-05",
		"2020-12-06",
		"2020-12-12",
		"2020-12-13",
		"2020-12-19",
		"2020-12-20",
		"2020-12-26",
		"2020-12-27",
		"2021-01-01",
	}
	for _, h := range constHoliday {
		hTime, err := time.ParseInLocation("2006-01-02", h, time.Now().Location())
		if err != nil {
			panic(errors.Wrapf(err, "cordwood date holiday parse %s", h))
		}
		year, ok := holiday[hTime.Year()]
		if !ok {
			holiday[hTime.Year()] = make(map[time.Month]map[int]struct{})
			year = holiday[hTime.Year()]
		}
		month, ok := year[hTime.Month()]
		if !ok {
			year[hTime.Month()] = make(map[int]struct{})
			month = year[hTime.Month()]
		}
		month[hTime.Day()] = struct{}{}
	}
}
